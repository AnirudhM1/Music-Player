<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="/search.css" type="text/css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.2/css/bulma.min.css">
    <script src="https://use.fontawesome.com/releases/v5.12.0/js/all.js"></script>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Quicksand">
    <script src="https://unpkg.com/scrollreveal"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/js/autocomplete.js"></script>
    <title>Soundemic - Search</title>
</head>
<style>
    #iconholder {
        transition: 2s linear;
    }

    .maine {
        transition: 2s linear;

    }

    html,
    body {
        min-width: 100%;
        min-height: 100%;
        background: url("https://www.pixelstalk.net/wp-content/uploads/2016/05/Black-music-white-piano-classy-HD-Wallpaper.jpg");
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center center;
        background-attachment: fixed;
    }

    #header>div {
        color: #f5f5f5;
    }

    #link1>a,
    #link2>a {
        text-decoration: none;
        color: white;
    }

    #link>a {
        color: grey;

    }

    #submit {
        color: #f5f5f5;
        border: 1px solid white;
        font-family: 'Quicksand';
        margin: 1em;
        background-color: transparent;
    }

    #login {
        color: #f5f5f5;
        border: 1px solid white;
        width: fit-content;
        height: fit-content;
        font-family: 'Quicksand';
        cursor: pointer;
        margin: 0.5em;
        background: transparent;
        font-size: 1.3em;

    }

    #login:hover {
        background-color: #dddcdcc0;
        color: black;
    }

    strong {
        color: white;
    }
</style>


<body style="font-family: 'Quicksand';">

    <div class="box" id="iconholder" style="background-color: transparent;">
        <nav class="nav">
            <center class="nav-center">
                <a class="icon">
                    <i class="fab fa-itunes-note" id="icon"></i>
                </a>
            </center>
        </nav>
    </div>

    <div class="container">
        <div class="columns">
            <div class="column">
                <div class="add" style="display:none;width:30vw;margin: 2em; ">
                    <div class="title is-3 has-text-left" style="color: #f5f5f5;">
                        To which one?
                        <br>
                        <br>
                        <div class="subtitle">

                            <% playlists.forEach(playlist=> { %>
                                <button class="button is-outlined" id="login"
                                    onclick="addSongToPlaylist('<%= playlist._id %>')">
                                    <%= playlist.title %>
                                </button>
                                <br>
                                <% }) %>
                                    <br>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>


    <div class="maine">
        <br>
        <br>

        <center>
            <nav class="breadcrumb has-succeeds-separator">
                <ul style="align-items:center;justify-content:flex-start;margin:-2.5em 0em 0em 2em;">
                    <li id="link1"><a href="/">Home</a></li>
                    <li id="link2"><a href="/users">Profile</a></li>
                    <li id="link" class="is-active"><a href="/search">Search</a>
                    </li>
                </ul>
            </nav>
        </center>


        <br>

        <form action="/search" method="POST" autocomplete="off" class="field">
            <div class="autocomplete">
                <center>
                    <input type="text" id="search" name="search" class="input is-medium" placeholder="Search."
                        style="font-family: 'Quicksand';width: 70vw;">
                </center>
            </div>
            <center>
                <button class="button is-medium is-hovered" id="submit">Submit</button>
            </center>
        </form>

        <!-- notifications -->
        <center>
            <div id="SongAddedNotification" class="notification" style="display: none;">
                <button class="delete" onclick="hide('SongAddedNotification')"></button>
                Song has been added to your playlist
            </div>
        </center>
        <center>
            <div id="SongNotAddedNotification" class="notification" style="display: none;">
                <button class="delete" onclick="hide('SongNotAddedNotification')"></button>
                Song could not be added to the playlist
            </div>
        </center>

        <div id="header" class="header">
            <div class="title is-3 has-text-left">
                Top Results
            </div>
        </div>

        <!--Display songs-->


        <div class="tile is-ancestor">
            <!-- Column 1 -->
            <div class="tile is-vertical">
                <% for(let i=0;i<songs.length;i+=2) { %>
                    <div class="tile is-child">
                        <% const song=songs[i] %>
                            <%- include('partials/songCard', {song}) %>
                    </div>
                    <% } %>
            </div>
            <!-- Column 2 -->
            <div class="tile is-vertical">
                <% for(let i=1;i<songs.length;i+=2) { %>
                    <div class="tile is-child">
                        <% const song=songs[i] %>
                            <%- include('partials/songCard', {song}) %>
                    </div>
                    <% } %>
            </div>
        </div>
    </div>




    <script>

        var currentlyPlaying = null;

        function pick2(song_id) {
            function updateProgress(e) {
                let progress = document.getElementById(`button4_${song_id}`);
                progress.style.color = "#000000";
                const { duration, currentTime } = e.srcElement;
                const progressPercent = (currentTime / duration) * 100;
                progress.style.width = `${progressPercent}%`;
                progress.style.transition = null;
                if (progressPercent === 100) {
                    setTimeout(() => {
                        progress.style.width = "0%";
                        let button = document.getElementById(`button2_${song_id}`);
                        button.innerText = "Play";
                        progress.style.transition = '2s ease-out';
                    }, 2500);


                }
            }
            let audio = document.getElementById(`button3_${song_id}`).nextElementSibling;
            audio.addEventListener('timeupdate', updateProgress);
            function setProgress(e) {
                let audio = document.getElementById(`button3_${song_id}`).nextElementSibling;
                const width = this.clientWidth;
                const clickX = e.offsetX;
                const duration = audio.duration;
                audio.currentTime = (clickX / width) * duration;
            }

            document.getElementById(`button3_${song_id}`).addEventListener('click', setProgress);
            let value = document.getElementById(`button2_${song_id}`).innerText;

            if (value === "Pause") {
                audio.pause()
                document.getElementById(`button2_${song_id}`).innerText = "Play";
                currentlyPlaying = null;
            }
            if (value === "Play") {
                if (currentlyPlaying) {
                    currentlyPlaying.pause();
                    const audio_id = currentlyPlaying.className;
                    let button = document.getElementById(`button2_${audio_id}`);
                    button.innerText = "Play";
                }
                audio.play()
                document.getElementById(`button2_${song_id}`).innerText = "Pause";
                currentlyPlaying = audio;
            }
        };
        function playlist(song_id) {
            selectedSong = song_id;
            document.querySelector(".maine").style.display = "none";
            document.querySelector(".add").style.display = null;
            document.getElementById(`button1_${song_id}`).innerText = "Added to playlist";
            document.getElementById(`button1_${song_id}`).classList.remove("is-outlined");
            // document.getElementById(`button3_${song_id}`).style.borderColor = "#FF3860";
            // let messageBox = document.getElementById(`button1_${song_id}`).parentNode.parentNode.parentNode;
            document.getElementById(`button1_${song_id}`).removeAttribute("onclick");

        }

        async function addSongToPlaylist(playlist_id) {

            const URL = `users/<%= user_id%>/playlists/${playlist_id}`;
            console.log(selectedSong);
            const response = await axios.post(URL, {
                song_id: selectedSong
            });

            let notification;

            if (response.status = 200) {
                notification = document.getElementById('SongAddedNotification');
            }
            else {
                notification = document.getElementById('SongNotAddedNotification');
            }

            notification.style.display = "block";

            document.querySelector(".maine").style.display = null;
            document.querySelector(".add").style.display = "none";

        }

        // document.getElementsByTagName("strong").style.color = " #ffffff";

        function hide(id) {
            document.getElementById(id).style.display = "none";
        }
    </script>
</body>